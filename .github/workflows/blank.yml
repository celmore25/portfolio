# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # linting job with flake
  flake8-lint:
      runs-on: ubuntu-latest
      name: Lint
      steps:
        - name: Check out source repository
          uses: actions/checkout@v2
        - name: Set up Python environment
          uses: actions/setup-python@v1
          with:
            python-version: "3.8"
        - name: flake8 Lint
          uses: py-actions/flake8@v1

  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # login to docker hub
      - name: Docker Login
        env:
          DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}
        run: docker login --username celmore25 -p ${DOCKER_SECRET}

      # builds the docker image with the github repo code included
      - name: Docker Build
        run: | 
              echo ${GITHUB_REPOSITORY}:${GITHUB_REF#refs/heads/}
              docker build -f infrastructure/DOCKERFILE -t ${GITHUB_REPOSITORY}:${GITHUB_REF#refs/heads/} .

      # push image to docker hub
      - name: Push Docker Image
        run: |
              docker push ${GITHUB_REPOSITORY}:${GITHUB_HEAD_REF}
  
  # This workflow contains a single job called "build"
  test:

    # create a necessity of build
    needs: build

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job 
    steps:

      # login to docker hub
      - name: Docker Pull
        env:
          DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}
        run: |
              docker login --username celmore25 -p ${DOCKER_SECRET}
              docker pull ${GITHUB_REPOSITORY}:${GITHUB_HEAD_REF}

      # builds the docker image with the github repo code included
      - name: Run Python Tests
        run: docker run ${GITHUB_REPOSITORY}:${GITHUB_HEAD_REF} python /portfolio/my_ml_code/ml_prep.py
